import random
import matplotlib.pyplot as plt
from itertools import count

id_counter = count(1)


class MapObject(object):
    """
        Objects generated by VacuumTaskEnvironment
    """
    def __init__(self, type_name, x_pos, y_pos):
        self.ident = id_counter.next()
        self.type = type_name
        self.x = x_pos
        self.y = y_pos

    def move_to_new_sqaure(self, direction):
        print "Movement not defined for object"

    def get_id(self):
        return self.ident


class VacuumTaskEnvironment(object):
    """
        Task Environment for Vacuum world, world is created with a 2x1 size
        and initiated to be clean (free from dirt).
    """
    def __init__(self):
        self.objects_on_map = {}
        self.set_lifetime(1000)
        self.set_dirt_amount(10)
        self.set_map_size(2, 1)

    def set_lifetime(self, number_of_steps):
        self.lifetime = number_of_steps

    def set_dirt_amount(self, number_of_dirt_squares):
        self.dirt = number_of_dirt_squares

    def set_map_size(self, map_width, map_height):
        self.width = map_width
        self.height = map_height
        self.area = self.width * self.height
        self.map = [[[] for _ in xrange(self.width)] for _ in xrange(self.height)]

    def place_object_on_map(self, map_obj):
        self.map[map_obj.y - 1][map_obj.x - 1].append(map_obj)
        self.objects_on_map[map_obj.ident] = [map_obj, map_obj.x, map_obj.y]

    def remove_object_from_map(self, object_id):
        obj, x, y = self.objects_on_map.pop(object_id, None)
        self.map[y - 1][x - 1].remove(obj)

    def place_dirt_on_map_randomly(self):
        for _ in range(self.dirt):
            x = random.randint(1, self.width)
            y = random.randint(1, self.height)
            self.place_object_on_map(MapObject("DIRT", x, y))

    def display_map(self):
        displayed_map = []
        for r_idx, row in enumerate(self.map):
            displayed_map.append([])
            for c_idx, column in enumerate(self.map[r_idx]):
                displayed_map[r_idx].append([])
                displayed_map[r_idx][c_idx] = 0
                for each_object in self.map[r_idx][c_idx]:
                    displayed_map[r_idx][c_idx] = displayed_map[r_idx][c_idx] + 1

        plt.imshow(displayed_map, interpolation="nearest")
        plt.colorbar()
        plt.grid(True)
        plt.title("DIRT MAP")
        plt.show()
